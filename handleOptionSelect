import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';
import { Volume2, ArrowRight, Info } from 'lucide-react';
import { Alert, AlertDescription } from '@/components/ui/alert';

const MalaysianLearningApp = () => {
  const [currentScenario, setCurrentScenario] = useState(0);
  const [dialogueStep, setDialogueStep] = useState(0);
  const [showTranslation, setShowTranslation] = useState(false);
  const [difficulty, setDifficulty] = useState('beginner');
  const [showCulturalNote, setShowCulturalNote] = useState(false);
  const [points, setPoints] = useState(0);

  // Scenario Data
  const scenarios = {
    beginner: [
      {
        title: "Di Kedai Mamak (At Mamak Restaurant)",
        context: "You're ordering food at a popular Malaysian mamak stall",
        culturalNote: "Mamak stalls are iconic Malaysian eateries...",
        dialogue: [
          {
            speaker: "Waiter",
            malay: "Nak makan apa?",
            english: "What would you like to eat?",
            formalMalay: "Anda ingin makan apa?",
            slang: "Nak tapau apa?",
            options: [
              { malay: "Saya nak roti canai satu dan teh tarik satu.", english: "I want one roti canai and one teh tarik.", correct: true },
              { malay: "Ada roti canai?", english: "Do you have roti canai?", correct: false }
            ]
          }
        ]
      },
      // Add other scenarios...
    ],
    // Add intermediate and advanced scenarios...
  };

  // Event Handler for User Response Selection
  const handleOptionSelect = (option) => {
    if (option.correct) {
      setPoints(points + 10);
      // Check for next dialogue step, or move to next scenario if end reached
      if (dialogueStep < scenarios[difficulty][currentScenario].dialogue.length - 1) {
        setDialogueStep(dialogueStep + 1);
      } else if (currentScenario < scenarios[difficulty].length - 1) {
        setCurrentScenario(currentScenario + 1);
        setDialogueStep(0);
      } else {
        alert("Congratulations! You've completed all scenarios.");
      }
    } else {
      alert("Try again!");
    }
  };

  return (
    <div className="max-w-4xl mx-auto p-4 space-y-4">
      <Tabs defaultValue="learn">
        <TabsList className="grid grid-cols-4 w-full">
          <TabsTrigger value="learn">Learn</TabsTrigger>
          <TabsTrigger value="culture">Cultural Notes</TabsTrigger>
          <TabsTrigger value="dialects">Dialects</TabsTrigger>
          <TabsTrigger value="progress">Progress</TabsTrigger>
        </TabsList>

        <TabsContent value="learn" className="space-y-4">
          <div className="flex justify-between items-center">
            <div className="space-x-2">
              {["beginner", "intermediate", "advanced"].map((level) => (
                <Button 
                  key={level} 
                  variant={difficulty === level ? 'default' : 'outline'}
                  onClick={() => setDifficulty(level)}
                >
                  {level.charAt(0).toUpperCase() + level.slice(1)}
                </Button>
              ))}
            </div>
            <div className="text-lg font-bold">Points: {points}</div>
          </div>

          <Card>
            <CardHeader>
              <CardTitle>{scenarios[difficulty][currentScenario].title}</CardTitle>
              <CardDescription>{scenarios[difficulty][currentScenario].context}</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="bg-blue-50 p-4 rounded-lg">
                <div className="flex justify-between items-start">
                  <div>
                    <div className="font-bold text-blue-600">
                      {scenarios[difficulty][currentScenario].dialogue[dialogueStep].speaker}:
                    </div>
                    <div className="text-lg font-medium">
                      {scenarios[difficulty][currentScenario].dialogue[dialogueStep].malay}
                    </div>
                    {showTranslation && (
                      <div className="text-gray-600 mt-2">
                        {scenarios[difficulty][currentScenario].dialogue[dialogueStep].english}
                      </div>
                    )}
                  </div>
                  <Button variant="ghost" onClick={() => alert(scenarios[difficulty][currentScenario].dialogue[dialogueStep].malay)}>
                    <Volume2 className="w-4 h-4" />
                  </Button>
                </div>

                <div className="mt-4 space-y-2">
                  <Button variant="ghost" onClick={() => setShowTranslation(!showTranslation)} size="sm">
                    {showTranslation ? "Hide" : "Show"} Translation
                  </Button>
                  <Button variant="ghost" onClick={() => setShowCulturalNote(!showCulturalNote)} size="sm">
                    <Info className="w-4 h-4 mr-2" /> Cultural Note
                  </Button>
                </div>

                {showCulturalNote && (
                  <Alert className="mt-4">
                    <AlertDescription>
                      {scenarios[difficulty][currentScenario].culturalNote}
                    </AlertDescription>
                  </Alert>
                )}
              </div>

              <div className="space-y-3">
                <div className="font-medium">Your Response:</div>
                {scenarios[difficulty][currentScenario].dialogue[dialogueStep].options.map((option, index) => (
                  <Button
                    key={index}
                    onClick={() => handleOptionSelect(option)}
                    className="w-full justify-between text-left"
                    variant="outline"
                  >
                    <div>
                      <div className="font-medium">{option.malay}</div>
                      <div className="text-sm text-gray-600">{option.english}</div>
                    </div>
                    <ArrowRight className="w-4 h-4" />
                  </Button>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>
        
        {/* Add Cultural and Dialect Notes sections here as needed */}
      </Tabs>
    </div>
  );
};

export default MalaysianLearningApp;
